<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.zeta.metaspace.web.dao.dataquality.TaskManageDAO">
    <resultMap id="BaseResultMap" type="io.zeta.metaspace.model.dataquality2.DataQualityTask">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression"/>
        <result column="enable" jdbcType="BIT" property="enable"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="delete" jdbcType="BIT" property="delete"/>
        <!--<result column="number" jdbcType="BIGINT" property="number"/>-->
        <!--<result column="qrtz_job" jdbcType="VARCHAR" property="qrtzJob"/>-->
        <result column="execution_count" jdbcType="BIGINT" property="executionCount"/>
        <result column="orange_warning_total_count" jdbcType="BIGINT" property="orangeWarningTotalCount"/>
        <result column="red_warning_total_count" jdbcType="BIGINT" property="redWarningTotalCount"/>
        <result column="error_total_count" jdbcType="BIGINT" property="errorTotalCount"/>
        <result column="updater" jdbcType="VARCHAR" property="updater"/>
        <!--<result column="current_execution_percent" jdbcType="REAL" property="currentExecutionPercent"/>-->
        <!--<result column="current_execution_status" jdbcType="SMALLINT" property="currentExecutionStatus"/>-->
        <!--<result column="tenantid" jdbcType="VARCHAR" property="tenantid"/>-->
        <result column="pool" jdbcType="VARCHAR" property="pool"/>
        <result column="general_warning_total_count" jdbcType="BIGINT" property="generalWarningTotalCount"/>
    </resultMap>

    <!--查询指定租户下已激活的任务-->
    <select id="queryEnableTasks"
            resultMap="BaseResultMap"
            parameterType="java.lang.String">
        select id, name
        from data_quality_task t
        where t.tenantid = #{tenantId}
          and t.enable = true
          and t.delete = false
    </select>

    <select id="getUserGroupHiveDatabase" resultType="io.zeta.metaspace.model.metadata.Database">
        SELECT DISTINCT
        db.database_guid databaseId,
        db.database_name databaseName
        FROM
        database_group_relation dgr
        INNER JOIN user_group ug ON dgr.group_id = ug.
        ID INNER JOIN db_info db ON dgr.database_guid = db.database_guid
        INNER JOIN user_group_relation ugr ON ug.ID = ugr.group_id
        WHERE
        ug.tenant = #{ tenantId }
        AND dgr.source_id = 'hive'
        AND db.status = 'ACTIVE'
        AND ugr.user_id =#{ userId }
    <if test="limit!=-1">
        limit #{limit} offset #{offset}
    </if>
    </select>

    <select id="getUserGroupDatabase" resultType="io.zeta.metaspace.model.usergroup.DBInfo">
    SELECT DISTINCT
        db.database_guid,
        db.database_name
    FROM
        database_group_relation dgr
        INNER JOIN user_group ug ON dgr.group_id = ug.
        ID INNER JOIN db_info db ON dgr.database_guid = db.database_guid
        INNER JOIN user_group_relation ugr ON ugr.group_id = ug."id"
        AND ugr.user_id = #{ userId }
    WHERE
        ug.tenant = #{ tenantId }
        AND dgr.source_id = #{ sourceId }
        AND db.status = 'ACTIVE'
    </select>
    <select id="getUserGroupHiveDatabaseSize" resultType="java.lang.Long">
    select count(*) from
    (
        SELECT DISTINCT
            db.database_guid databaseId,
            db.database_name databaseName
        FROM
            database_group_relation dgr
            INNER JOIN user_group ug ON dgr.group_id = ug.
            ID INNER JOIN db_info db ON dgr.database_guid = db.database_guid
            INNER JOIN source_info si ON dgr.database_guid = si.database_id
            INNER JOIN category_group_relation cr ON cr.category_id = si.category_id
            INNER JOIN user_group_relation ugr ON ugr.group_id = cr.group_id
        WHERE
            ug.tenant = #{tenantId}
            AND dgr.source_id = 'hive'
            AND db.status = 'ACTIVE'
            AND ugr.user_id =#{userId}
            and si.version=0
            and ug.valid = 't'
            and si.status = '3'
            UNION ALL
        SELECT DISTINCT
            db.database_guid,
            db.database_name
        FROM
            database_group_relation dgr
            INNER JOIN user_group ug ON dgr.group_id = ug.
            ID INNER JOIN db_info db ON dgr.database_guid = db.database_guid
            INNER JOIN source_info si ON dgr.database_guid = si.database_id
        WHERE
            ug.tenant = #{tenantId}
            AND dgr.source_id =  'hive'
            AND db.status = 'ACTIVE'
            and si.version=0
            and ug.valid = 't'
            and si.status = '3'
            AND si.category_id IN ( '1', '2', '3', '4' )
    ) F
    </select>


</mapper>