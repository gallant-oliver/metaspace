<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.zeta.metaspace.web.dao.fileinfo.FileInfoDAO">
    <resultMap id="BaseResultMap" type="io.zeta.metaspace.model.fileinfo.FileInfo">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
        <result column="file_type" jdbcType="VARCHAR" property="fileType"/>
        <result column="file_size" jdbcType="BIGINT" property="fileSize"/>
        <result column="file_path" jdbcType="VARCHAR" property="filePath"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="delete" jdbcType="BOOLEAN" property="delete"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , file_name, file_type, file_size, file_path, create_time, update_time, create_user,
    "delete"
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from "file_info"
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from "file_info"
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="io.zeta.metaspace.model.fileinfo.FileInfo"
            useGeneratedKeys="true">
        insert into "file_info" (id,file_name, file_type, file_size,
                                 file_path, create_time, update_time,
                                 create_user, "delete",business_path)
        values (#{id,jdbcType=VARCHAR},#{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT},
                #{filePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{createUser,jdbcType=VARCHAR}, #{delete,jdbcType=BOOLEAN},#{businessPath,jdbcType=VARCHAR})
    </insert>

    <select id="getFileInfoList" resultType="io.zeta.metaspace.model.fileinfo.FileInfoVO">
    SELECT
	f2.NAME newComment,
	fi.*,
    count(*) over() total
    FROM
	"file_info" fi
	LEFT JOIN (
	SELECT
		*
	FROM
		(
		SELECT
			fc1.file_id,
			fc1.NAME,
			RANK ( ) OVER ( PARTITION BY fc1.file_id ORDER BY fc1.create_time DESC )
		FROM
			file_comment fc1
		) f
	WHERE
		f.RANK = 1
	) f2 ON f2.file_id = fi.ID
    <where>
    <if test="name!=null and name!=''">
        fi.file_name ~ #{name}
    </if>
    </where>
	LIMIT #{limit} OFFSET #{offset}
    </select>

    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="io.zeta.metaspace.model.fileinfo.FileInfo" useGeneratedKeys="true">
        insert into "file_info"
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="fileSize != null">
                file_size,
            </if>
            <if test="filePath != null">
                file_path,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="delete != null">
                "delete",
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                #{fileSize,jdbcType=BIGINT},
            </if>
            <if test="filePath != null">
                #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="delete != null">
                #{delete,jdbcType=BOOLEAN},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="io.zeta.metaspace.model.fileinfo.FileInfo">
        update "file_info"
        <set>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileSize != null">
                file_size = #{fileSize,jdbcType=BIGINT},
            </if>
            <if test="filePath != null">
                file_path = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="delete != null">
                "delete" = #{delete,jdbcType=BOOLEAN},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.zeta.metaspace.model.fileinfo.FileInfo">
        update "file_info"
        set file_name   = #{fileName,jdbcType=VARCHAR},
            file_type   = #{fileType,jdbcType=VARCHAR},
            file_size   = #{fileSize,jdbcType=BIGINT},
            file_path   = #{filePath,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=VARCHAR},
            "delete"    = #{delete,jdbcType=BOOLEAN}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>