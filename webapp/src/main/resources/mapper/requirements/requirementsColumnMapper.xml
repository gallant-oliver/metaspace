<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.zeta.metaspace.web.dao.requirements.RequirementsColumnMapper">
    <resultMap id="BaseResultMap" type="io.zeta.metaspace.model.po.requirements.RequirementsColumnPO">
        <id column="guid" jdbcType="VARCHAR" property="guid"/>
        <result column="requirements_id" jdbcType="VARCHAR" property="requirementsId"/>
        <result column="table_id" jdbcType="VARCHAR" property="tableId"/>
        <result column="column_id" jdbcType="VARCHAR" property="columnId"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
        <result column="sample_data" jdbcType="VARCHAR" property="sampleData"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete" jdbcType="SMALLINT" property="delete"/>
    </resultMap>

    <sql id="Base_Column_List">
        guid, requirements_id, table_id, column_id, operator, sample_data, description, create_time,
    update_time,
        delete
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from "public"."requirements_column"
        where guid = #{guid,jdbcType=VARCHAR}
    </select>

    <select id="getByRequirementId"
            resultType="io.zeta.metaspace.model.po.requirements.RequirementsColumnPO"
            parameterType="java.lang.String">
        select guid,
               requirements_id,
               table_id,
               column_id,
               operator,
               sample_data,
               description
        from requirements_column
        where requirements_id = #{requirementId}
          and delete = 0
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from "public"."requirements_column"
        where guid = #{guid,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByRequirementId" parameterType="java.lang.String">
        update requirements_column
        set delete = 1
        where requirements_id = #{requirementId}
          and delete = 0
    </delete>

    <delete id="batchDeleteByPrimaryKey" parameterType="java.util.Collection">
        update requirements_column
        set delete = 1
        where guid in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and delete = 0
    </delete>

    <insert id="insert" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsColumnPO">
        insert into "public"."requirements_column" (guid, requirements_id, table_id,
                                                    column_id, operator, sample_data,
                                                    description, create_time, update_time,
                                                    delete)
        values (#{guid,jdbcType=VARCHAR}, #{requirementsId,jdbcType=VARCHAR}, #{tableId,jdbcType=VARCHAR},
                #{columnId,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, #{sampleData,jdbcType=VARCHAR},
                #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{delete,jdbcType=SMALLINT})
    </insert>

    <insert id="batchInsert" parameterType="java.util.Collection">
        insert into "public"."requirements_column"
        (
        guid,
        requirements_id,
        table_id,
        column_id,
        operator,
        sample_data,
        description,
        create_time,
        update_time,
        delete
        )
        values
        <foreach collection='list' item='item' index='index' separator=','>
            (
            #{item.guid,jdbcType=VARCHAR},
            #{item.requirementsId,jdbcType=VARCHAR},
            #{item.tableId,jdbcType=VARCHAR},
            #{item.columnId,jdbcType=VARCHAR},
            #{item.operator,jdbcType=VARCHAR},
            #{item.sampleData,jdbcType=VARCHAR},
            #{item.description,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.delete,jdbcType=SMALLINT}
            )
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsColumnPO">
        update "public"."requirements_column"
        <set>
            <if test="requirementsId != null">
                requirements_id = #{requirementsId,jdbcType=VARCHAR},
            </if>
            <if test="tableId != null">
                table_id = #{tableId,jdbcType=VARCHAR},
            </if>
            <if test="columnId != null">
                column_id = #{columnId,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="sampleData != null">
                sample_data = #{sampleData,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delete != null">
                delete = #{delete,jdbcType=SMALLINT},
            </if>
        </set>
        where guid = #{guid,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsColumnPO">
        update "public"."requirements_column"
        set requirements_id = #{requirementsId,jdbcType=VARCHAR},
            table_id        = #{tableId,jdbcType=VARCHAR},
            column_id       = #{columnId,jdbcType=VARCHAR},
            operator        = #{operator,jdbcType=VARCHAR},
            sample_data     = #{sampleData,jdbcType=VARCHAR},
            description     = #{description,jdbcType=VARCHAR},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            update_time     = #{updateTime,jdbcType=TIMESTAMP},
            delete          = #{delete,jdbcType=SMALLINT}
        where guid = #{guid,jdbcType=VARCHAR}
    </update>

    <update id="batchUpdate" parameterType="java.util.Collection">
        <foreach collection="list" item="item" index="index" separator=";">
            update requirements_column
            set
            requirements_id = #{item.requirementsId,jdbcType=VARCHAR},
            table_id = #{item.tableId,jdbcType=VARCHAR},
            column_id = #{item.columnId,jdbcType=VARCHAR},
            operator = #{item.operator,jdbcType=VARCHAR},
            sample_data = #{item.sampleData,jdbcType=VARCHAR},
            description = #{item.description,jdbcType=VARCHAR},
            update_time = #{item.updateTime,jdbcType=TIMESTAMP}
            where guid = #{item.guid,jdbcType=VARCHAR}
        </foreach>

    </update>
  <select id="selectByRequirementId" resultType="io.zeta.metaspace.model.po.requirements.RequirementsColumnPO">
    select rc.column_id, ci.column_name, rc.operator, rc.sample_data, rc.description
    from requirements_column rc
    join column_info ci on ci.column_guid=rc.column_id
    where rc.requirements_id=#{requirementId} and delete=0
  </select>

</mapper>