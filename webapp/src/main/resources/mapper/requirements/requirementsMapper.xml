<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.zeta.metaspace.web.dao.requirements.RequirementsMapper">
  <resultMap id="BaseResultMap" type="io.zeta.metaspace.model.po.requirements.RequirementsPO">
    <id column="guid" jdbcType="VARCHAR" property="guid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="resource_type" jdbcType="SMALLINT" property="resourceType" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="agreement" jdbcType="VARCHAR" property="agreement" />
    <result column="request mode" jdbcType="VARCHAR" property="requestMode" />
    <result column="aiming_field" jdbcType="VARCHAR" property="aimingField" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="business_id" jdbcType="VARCHAR" property="businessId" />
    <result column="table_id" jdbcType="VARCHAR" property="tableId" />
    <result column="source_id" jdbcType="VARCHAR" property="sourceId" />
    <result column="tenant_id" jdbcType="VARCHAR" property="tenantId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete" jdbcType="SMALLINT" property="delete" />
  </resultMap>

  <sql id="Base_Column_List">
    guid, name, num, resource_type, version, agreement, "request mode", aiming_field,
    file_name, file_path, description, business_id, table_id, source_id, tenant_id, creator,
    status, create_time, update_time,
    delete
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from "public"."requirements"
    where guid = #{guid,jdbcType=VARCHAR}
  </select>


  <select id="pagedAlreadyFeedbackRequirements"
          resultType="io.zeta.metaspace.model.po.requirements.RequirementsPO">
    SELECT COUNT(1) OVER () total,
    guid,
    version
    FROM requirements
    WHERE table_id = #{tableId}
    AND status = 4
    AND delete = false
    <if test='params != null'>
      ORDER BY create_time DESC
      <if test='params.limit != null and params.limit != -1 and params.offset != null '>
        LIMIT #{params.limit} OFFSET #{offset}
      </if>
    </if>
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete
    from "public"."requirements"
    where guid = #{guid,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsPO">
    insert into "public"."requirements" (guid, name, num,
                                         resource_type, version, agreement,
                                         "request mode", aiming_field, file_name,
                                         file_path, description, business_id,
                                         table_id, source_id, tenant_id,
                                         creator, status, create_time,
                                         update_time, delete)
    values (#{guid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR},
            #{resourceType,jdbcType=SMALLINT}, #{version,jdbcType=VARCHAR}, #{agreement,jdbcType=VARCHAR},
            #{requestMode,jdbcType=VARCHAR}, #{aimingField,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR},
            #{filePath,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{businessId,jdbcType=VARCHAR},
            #{tableId,jdbcType=VARCHAR}, #{sourceId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR},
            #{creator,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP}, #{delete,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsPO">
    insert into "public"."requirements"
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="guid != null">
        guid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="agreement != null">
        agreement,
      </if>
      <if test="requestMode != null">
        "request mode",
      </if>
      <if test="aimingField != null">
        aiming_field,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="tableId != null">
        table_id,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delete != null">
        delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="guid != null">
        #{guid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="agreement != null">
        #{agreement,jdbcType=VARCHAR},
      </if>
      <if test="requestMode != null">
        #{requestMode,jdbcType=VARCHAR},
      </if>
      <if test="aimingField != null">
        #{aimingField,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=VARCHAR},
      </if>
      <if test="tableId != null">
        #{tableId,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsPO">
    update "public"."requirements"
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=SMALLINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="agreement != null">
        agreement = #{agreement,jdbcType=VARCHAR},
      </if>
      <if test="requestMode != null">
        "request mode" = #{requestMode,jdbcType=VARCHAR},
      </if>
      <if test="aimingField != null">
        aiming_field = #{aimingField,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=VARCHAR},
      </if>
      <if test="tableId != null">
        table_id = #{tableId,jdbcType=VARCHAR},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delete != null">
        delete = #{delete,jdbcType=SMALLINT},
      </if>
    </set>
    where guid = #{guid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.zeta.metaspace.model.po.requirements.RequirementsPO">
    update "public"."requirements"
    set name = #{name,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=SMALLINT},
      version = #{version,jdbcType=VARCHAR},
      agreement = #{agreement,jdbcType=VARCHAR},
      "request mode" = #{requestMode,jdbcType=VARCHAR},
      aiming_field = #{aimingField,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      business_id = #{businessId,jdbcType=VARCHAR},
      table_id = #{tableId,jdbcType=VARCHAR},
      source_id = #{sourceId,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete = #{delete,jdbcType=SMALLINT}
    where guid = #{guid,jdbcType=VARCHAR}
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.util.List">
    update "public"."requirements"
    set delete = #{delete,jdbcType=SMALLINT}
    where guid = #{guid,jdbcType=VARCHAR}
    <foreach item='id' index='index' collection='guids' separator=',' open='(' close=')'>
      #{id}
    </foreach>
  </delete>
</mapper>